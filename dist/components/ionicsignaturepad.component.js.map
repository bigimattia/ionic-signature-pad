{"version":3,"file":"ionicsignaturepad.component.js","sourceRoot":"","sources":["../../src/components/ionicsignaturepad.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { SignaturePad } from \"angular2-signaturepad\";\n\nconst HTML_TEMPLATE = `\n<ion-row>\n<ion-col style=\"text-align:right;\" class=\"no-padding\">\n<ion-button fill=\"clear\" (click)=\"drawClear()\" style=\"--padding-top: 0; --padding-bottom: 0; --padding-start: 0; --padding-end: 0; --margin-top: 4px; --margin-bottom: 0; --margin-start: 0; --margin-end: 8px;\"><ion-icon slot=\"icon-only\" name=\"close\" color=\"dark\"></ion-icon></ion-button>\n</ion-col>\n</ion-row>\n<signature-pad [options]=\"signaturePadOptions\" id=\"signatureCanvas\" (onBeginEvent)=\"drawStart()\" (onEndEvent)=\"drawComplete()\"></signature-pad>`;\n\n@Component({\n  selector: \"ion-signaturepad\",\n  template: HTML_TEMPLATE,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: IonicsignaturepadComponent,\n      multi: true,\n    },\n  ],\n})\nexport class IonicsignaturepadComponent\n  implements OnInit, ControlValueAccessor\n{\n  @ViewChild(SignaturePad, { static: false }) public signaturePad: SignaturePad;\n\n  public signaturePadOptions: any = {};\n  public signatureImage: string;\n\n  constructor() {\n    this.signaturePadOptions = {\n      minWidth: 2,\n      canvasWidth: 800,\n      canvasHeight: 240,\n      backgroundColor: \"rgb(255,255,255)\",\n    };\n  }\n\n  ngOnInit() {}\n\n  private onTouch: Function = () => {};\n  private disabled: boolean = false;\n\n  onChange(data) {}\n\n  @Input() set canvasWidth(data: number) {\n    this.signaturePadOptions.canvasWidth = data;\n  }\n\n  @Input() set canvasHeight(data: number) {\n    this.signaturePadOptions.canvasHeight = data;\n  }\n\n  @Input() set backgroundColor(data: string) {\n    this.signaturePadOptions.backgroundColor = data;\n  }\n\n  // Allow Angular to set the value on the component\n  writeValue(value): void {\n    this.onChange(value);\n  }\n\n  // Save a reference to the change function passed to us by\n  // the Angular form control\n  registerOnChange(fn): void {\n    this.onChange = fn;\n  }\n\n  // Save a reference to the touched function passed to us by\n  // the Angular form control\n  registerOnTouched(fn): void {\n    this.onTouch = fn;\n  }\n\n  // Allow the Angular form control to disable this input\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  canvasResize() {\n    let canvas = document.querySelector(\"canvas\");\n    this.signaturePad.set(\"minWidth\", 1);\n  }\n\n  ngAfterViewInit() {\n    this.signaturePad.clear();\n    this.canvasResize();\n  }\n\n  drawStart() {}\n\n  drawComplete() {\n    this.signatureImage = this.signaturePad.toDataURL(\"image/jpeg\", 0.5);\n    this.writeValue(this.signatureImage);\n  }\n\n  drawClear() {\n    this.signaturePad.clear();\n    this.signatureImage = null;\n    this.writeValue(this.signatureImage);\n  }\n}\n"]}